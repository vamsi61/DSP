class Node:    
    def __init__(self,data):    
        self.data = data;    
        self.previous = None;    
        self.next = None;    
            
class InsertEnd:    
    #Represent the head and tail of the doubly linked list    
    def __init__(self):    
        self.head = None;    
        self.tail = None;    
    def addAtEnd(self, data):    
        #Create a new node    
        newNode = Node(data);    
        if(self.head == None):       
            self.head = self.tail = newNode;        
            self.head.previous = None;       
            self.tail.next = None;     
        else:        
            self.tail.next = newNode;        
            newNode.previous = self.tail;        
            self.tail = newNode;       
            self.tail.next = None;    
                   
    def display(self):        
        current = self.head;    
        if(self.head == None):    
            print("List is empty");    
            return;    
        print("Adding a node to the end of the list: ");    
        while(current != None):        
            print(current.data),    
            current = current.next;                   
        print();                
dList = InsertEnd();         
#Adding 7 to the list    
dList.addAtEnd(7);    
dList.display();
#Adding 23 to the list       
dList.addAtEnd(23);    
dList.display();    
#Adding 60 to the list    
dList.addAtEnd(60);    
dList.display();    



runfile('C:/Users/vamsi/OneDrive/Desktop/python/untitled18.py', wdir='C:/Users/vamsi/OneDrive/Desktop/python')
Adding a node to the end of the list: 
7

Adding a node to the end of the list: 
7
23

Adding a node to the end of the list: 
7
23
60
