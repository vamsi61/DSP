class Node:  
    def __init__(self,data):  
        self.data = data;  
        self.previous = None;  
        self.next = None;  
          
class CountList:  
    #Represent the head and tail of the doubly linked list  
    def __init__(self):  
        self.head = None;  
        self.tail = None;  
          
 
    def addNode(self, data):  
        #Create a new node  
        newNode = Node(data);  
          
        #If list is empty  
        if(self.head == None):  
            self.head = self.tail = newNode;  
            self.head.previous = None;  
            self.tail.next = None;  
        else:  
            self.tail.next = newNode;  
            newNode.previous = self.tail;  
            self.tail = newNode;  
            self.tail.next = None;  
              
    def countNodes(self):  
        counter = 0;  
        current = self.head;  
          
        while(current != None):  
            counter = counter + 1;  
            current = current.next;  
        return counter;  
              
    def display(self):  
        current = self.head;  
        if(self.head == None):  
            print("List is empty");  
            return;  
        print("Nodes of doubly linked list: ");  
        while(current != None):   
            print(current.data),  
            current = current.next;  
              
dList = CountList();    
dList.addNode(48);  
dList.addNode(32);  
dList.addNode(126);  
dList.addNode(18);  
dList.addNode(77);  
   
#Displays the nodes present in the list  
dList.display();  
   
#Counts the nodes present in the given list  
print("\nCount of nodes present in the list: " + str(dList.countNodes()));  


runfile('C:/Users/vamsi/OneDrive/Desktop/python/untitled15.py', wdir='C:/Users/vamsi/OneDrive/Desktop/python')
Nodes of doubly linked list: 
48
32
126
18
77

Count of nodes present in the list: 5
