from scipy import sparse
from scipy.stats import uniform
import numpy as np
from scipy.sparse import coo_matrix

array1=[[0,0,0,1],
       [3,0,0,0],
       [4,0,0,0],
       [0,0,2,0]
      ]

i=[]
j=[]
k=[]

for q in range(len(array1)):
    for w in range(len(array1[0])):
        if array1[q][w]!=0:
            i.append(q)
            j.append(w)
            k.append(array1[q][w])

row  = np.array(i)
col  = np.array(j)
data = np.array(k)
t=coo_matrix((data, (row, col)))

array2=[[0,2,0,1],
       [3,7,0,0],
       [4,0,0,0],
       [0,0,6,0]
      ]

i=[]
j=[]
k=[]

for q in range(len(array2)):
    for w in range(len(array2[0])):
        if array2[q][w]!=0:
            i.append(q)
            j.append(w)
            k.append(array2[q][w])

row2  = np.array(i)
col2  = np.array(j)
data2 = np.array(k)
v=coo_matrix((data2, (row2, col2)))


k=99
while(k!=0):
    print("enter \n1 to perform multiplication\n2 to perform transpose\n3 to display the sparse matrix\n0 to exit")
    k=int(input())
    if k==1:
        print(coo_matrix.multiply(t,v))
    elif k==2:
        print(coo_matrix.transpose(t))
    elif k==3:
        print("the first matrix")
        print(coo_matrix.toarray(t))
        print("the seecond matrix")
        print(coo_matrix.toarray(v))



runfile('C:/Users/vamsi/.spyder-py3/untitled10.py', wdir='C:/Users/vamsi/.spyder-py3')
enter 
1 to perform multiplication
2 to perform transpose
3 to display the sparse matrix
0 to exit

3
the first matrix
[[0 0 0 1]
 [3 0 0 0]
 [4 0 0 0]
 [0 0 2 0]]
the seecond matrix
[[0 2 0 1]
 [3 7 0 0]
 [4 0 0 0]
 [0 0 6 0]]
enter 
1 to perform multiplication
2 to perform transpose
3 to display the sparse matrix
0 to exit

2
  (3, 0)	1
  (0, 1)	3
  (0, 2)	4
  (2, 3)	2
enter 
1 to perform multiplication
2 to perform transpose
3 to display the sparse matrix
0 to exit

1
  (0, 3)	1
  (1, 0)	9
  (2, 0)	16
  (3, 2)	12
enter 
1 to perform multiplication
2 to perform transpose
3 to display the sparse matrix
0 to exit

0
